#!/bin/sh
#
# mksnortcentercensorcert - automatically creates a server certificate for SnortCenter Sensor.
# By Michel Blomgren for SENTINIX - http://sentinix.org
#
# This script is distributed under the GNU General Public License.
#

if [ ! "$1" = "-f" ]; then
    echo "usage: $0 -f"
    echo "...automatically creates and installs an SSL certificate for the SnortCenter"
    echo "Sensor Agent. It will overwrite any old certificate."
    echo
    exit 1
fi

if [ "$TMPDIR" = "" ]; then
	TMPDIR="/tmp"
fi

TempDir="$TMPDIR/mksnortcentersensor-$$"
CWD=`pwd`

echo
echo -e "\033[1;37mGenerating SSL private key for SnortCenter Sensor...\033[0m"
echo

mkdir -p $TempDir || exit 1
cd $TempDir

########## Generate sxssl.cf ###############################################

cat <<EOF > sxssl.cf
[ req ]
default_bits		= 1024
default_keyfile		= keyfile.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes

x509_extensions = v3_ca
string_mask = nombstr

prompt			= no
output_password		= sentinix

[ req_distinguished_name ]
C			= XX
ST			= SENTINIX
L			= `hostname -f`
O			= `hostname -d`
OU			= `hostname`
CN			= `hostname -f`
emailAddress		= root@`hostname -f`

[ req_attributes ]
#challengePassword	= sentinix


[ v3_ca ]

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:true
EOF

########## Generate sxssl_ca.cf ############################################

cat <<EOF > sxssl_ca.cf
[ req ]
default_bits		= 1024
default_keyfile		= keyfile.pem
distinguished_name	= req_distinguished_name
attributes		= req_attributes

x509_extensions = v3_ca
string_mask = nombstr

prompt			= no
output_password		= sentinix

[ req_distinguished_name ]
C			= SE
ST			= SENTINIX
L			= SENTINIX
O			= SENTINIX Dynamic Certificate Authority
OU			= Autogenerated by mksnortcentersensor
CN			= sentinix.org
emailAddress		= info@sentinix.org

[ req_attributes ]
#challengePassword	= sentinix


[ v3_ca ]

subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always
basicConstraints = CA:true

[ ca ]
default_ca		= CA_own
[ CA_own ]
dir                     = .
certs                   = \$dir
new_certs_dir           = \$dir/ca.db.certs
database                = \$dir/ca.db.index
serial                  = \$dir/ca.db.serial
RANDFILE                = \$dir/ca.db.rand
certificate             = \$dir/ca.crt
private_key             = \$dir/ca.key
default_days            = 365
default_crl_days        = 30
default_md              = md5
preserve                = no
policy                  = policy_anything
[ policy_anything ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional
EOF

########## Clean up ########################################################

rm -rf ca.db.certs
mkdir ca.db.certs
echo '01' > ca.db.serial
echo -n "" > ca.db.index

########## Certificate REQuest section #####################################

openssl req -config sxssl_ca.cf -new -x509 -days 3650 -nodes -out /usr/components/snort/sensor/conf/sensor.pem -keyout /usr/components/snort/sensor/conf/sensor.pem &&

cd $CWD &&
rm -rf $TempDir

if [ ! $? -eq 0 ]; then
	echo
	echo -ne "\033[1;31m$0 failed"!
	echo -e "\033[0m"
	echo
	exit 1
fi
