#
# SENTINIX Apache configuration
# This file is included from httpd.conf
#
# Written by Michel Blomgren
# michel@sentinix.org
#

DocumentRoot "/var/www/htdocs-unsecure"

#
# By default, the SENTINIX GUI is entirely behind TLS/SSL client
# authentication, see comments below on how to "deal" with this.
#
#
# How to use the "Allow from" directive:
#
# "Allow from" is used within the <Directory> section in these examples, refer
# to http://httpd.apache.org/docs/mod/mod_access.html for other uses and more
# info. For more info on the <Directory> section, see
# http://httpd.apache.org/docs/mod/core.html#directory
#
# Below is an example of how to restrict access. Only 192.168.0.2 is allowed
# to access the Cacti interface:
#
#	Alias /cacti /usr/components/cacti/
#	<Directory "/usr/components/cacti/">
#		Options None
#		AllowOverride AuthConfig
#		Order allow,deny
#		Allow from 192.168.0.2
#	</Directory>
#
# The following allows access from everywhere:
# Allow from all
#
# Whatever is following "Allow from" may be:
#
# A (partial) domain-name
#    Example: Allow from apache.org
#
# A full IP address
#    Example: Allow from 10.1.2.3
#    An IP address of a host allowed access
#
# A partial IP address
#    Example: Allow from 10.1
#    The first 1 to 3 bytes of an IP address, for subnet restriction.
#
# A network/netmask pair
#    Example: Allow from 10.1.0.0/255.255.0.0
#    A network a.b.c.d, and a netmask w.x.y.z. For more fine-grained subnet
#    restriction. (Apache 1.3 and later)
#
# A network/nnn CIDR specification
#    Example: Allow from 10.1.0.0/16
#    Similar to the previous case, except the netmask consists of nnn
#    high-order 1 bits. (Apache 1.3 and later)
#
#
# If you make any changes in this file you must restart Apache by issuing
# the following command as root:
#
#	$ apachectl restart
#

#
# We apply strict rules to the root dir and it's sub-directories.
#
<Directory />
	Options FollowSymLinks
	AllowOverride None
	Order deny,allow
	Deny from all
</Directory>


###
### By default, the SENTINIX GUI is entirely behind SSL client authentication.
### This means that, e.g. Nagios is only accessible from behind TLS/SSL. You
### may disable client authentication, and keep regular TLS/SSL by commenting
### out two lines below. Search for SSLVerifyClient and read the comment.
###
### Access to the SENTINIX components is controlled in two ways; firstly, each
### component under /usr/components/ is provided an alias. Unless this alias
### is defined, access through HTTP won't work. Secondly, each components'
### Directory has the SSLRequireSSL variable defined, which means it will block
### unless accessed over TLS/SSL.
###
### If you want to access a component through regular un-encrypted HTTP, you
### must first uncomment the Alias lines that apply, then comment out
### "SSLRequireSSL" under the component's Directory definition. For example,
### to provide Nagios through HTTP, uncomment the ScriptAlias and Alias lines
### below, comment out "SSLRequireSSL" under
### Directory "/usr/components/nagios" and restart Apache by issuing
### "apachectl restart".
###

## Nagios aliases
# ScriptAlias /nagios/cgi-bin/ /usr/components/nagios/sbin/
# Alias /nagios /usr/components/nagios/share/
#
## Nagat alias
#    Alias /nagat /usr/components/nagat/
#
## cgitoolkit alias
#    ScriptAlias /cgitoolkit/ /usr/components/cgitoolkit/
#
## ACID (snort interface) alias
#    Alias /acid /usr/components/snort/acid/
#
## SnortCenter (snort control center) alias
#    Alias /snortcenter /usr/components/snort/snortcenter/
#
## Cacti alias
#    Alias /cacti /usr/components/cacti/
#
## BandwidthD alias
#    Alias /bandwidthd /usr/components/bandwidthd/htdocs/

###
### General directory rules for SENTINIX components
###
### Please note!  It's not possible to access any component
### as long as they are not under /var/www/htdocs-unsecure.
###
### Access is provided by the Alias and ScriptAlias commands
### within the SSL client authenticated <VirtualHost> below
### (or if you have uncommented some Alias above) *and* by
### the SSLRequireSSL variable.
###

#
# Allow everyone access to /var/www/htdocs-unsecure
#
<Directory "/var/www/htdocs-unsecure">
    Options FollowSymLinks Includes ExecCGI
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

#
# Allow everyone access to /var/www/htdocs (since DocumentRoot isn't this dir,
# this is OK). Also note the SSLRequireSSL variable.
#
<Directory "/var/www/htdocs">
    SSLRequireSSL
    Options FollowSymLinks Includes ExecCGI
    AllowOverride AuthConfig
    Order allow,deny
    Allow from all
</Directory>

#
# Set up general access to /usr/components
#
<Directory "/usr/components">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

#
# Configuration for Nagios
# (access has already been provided for /usr/components and it's subdirs).
#
<Directory "/usr/components/nagios">
    SSLRequireSSL
    AllowOverride AuthConfig
#
# Uncomment the lines below to allow access to Nagios only from 192.168.0.0/24
#    Order allow,deny
#    Allow from 192.168.0
</Directory>

#
# Configuration for Nagios
# (SSLRequireSSL isn't needed here, the above definition takes care of that)
# Nagios cgi:s
<Directory "/usr/components/nagios/sbin/">
    AllowOverride AuthConfig
    Options ExecCGI
</Directory>
# Nagios html
<Directory "/usr/components/nagios/share">
    Options None
    AllowOverride AuthConfig
</Directory>

#
# Configuration for Nagat
#
<Directory "/usr/components/nagat/">
    SSLRequireSSL
    Options None
    AllowOverride AuthConfig
</Directory>

#
# Configuration for the cgitoolkit
#
<Directory "/usr/components/cgitoolkit/">
    SSLRequireSSL
    AllowOverride AuthConfig
    Options ExecCGI
</Directory>

#
# Configuration for ACID
#
<Directory "/usr/components/snort/acid/">
    SSLRequireSSL
    Options None
    AllowOverride AuthConfig
</Directory>

#
# Configuration for SnortCenter
#
<Directory "/usr/components/snort/snortcenter/">
    SSLRequireSSL
    Options None
    AllowOverride AuthConfig
</Directory>

#
# Configuration for Cacti
#
<Directory "/usr/components/cacti/">
    SSLRequireSSL
    Options None
    AllowOverride AuthConfig
</Directory>

#
# Configuration for BandwidthD
#
<Directory "/usr/components/bandwidthd/htdocs/">
    SSLRequireSSL
    Options None
    AllowOverride AuthConfig
</Directory>


###
### TLS/SSL configuration starts below.
###
#
# To disable client authentication, but keep SSL, look for SSLVerifyClient
# below.
#
<IfDefine SSL>
<VirtualHost _default_:443>
    DocumentRoot "/var/www/htdocs"
    ErrorLog /var/log/apache/error_log
    TransferLog /var/log/apache/access_log

    # Turn on SSL for this virtualhost
    SSLEngine on
    # Allow all protocols...
    SSLProtocol all
    # ...but only HIGH or MEDIUM ciphers
    SSLCipherSuite HIGH:MEDIUM

    # Server certificate
    SSLCertificateFile /etc/apache/ssl.crt/server.crt
    # Server private key
    SSLCertificateKeyFile /etc/apache/ssl.key/server.key
    # Certificate Authority for client authentication
    SSLCACertificatePath /etc/apache/ssl.crt
    SSLCACertificateFile /etc/apache/ssl.crt/ca.crt

    # See mod_ssl.conf for info on this
    <Files ~ "\.(cgi|shtml|phtml|php3?)$">
	SSLOptions +StdEnvVars
    </Files>

    SetEnvIf User-Agent ".*MSIE.*" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0

    CustomLog /var/log/apache/ssl_request_log \
        "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

    #
    # Comment out the next two lines to remove client authentication, the
    # result will be TLS/SSL but without authentication (what most people
    # are used to).
    #
    SSLVerifyClient require
    SSLVerifyDepth  1
    # 0 = Only self-signed client certificates are accepted (not possible in default SENTINIX config)
    # 1 = self-signed client certificate or has to be signed by a CA known to the server


# Nagios aliases
    ScriptAlias /nagios/cgi-bin/ /usr/components/nagios/sbin/
    Alias /nagios /usr/components/nagios/share/

# Nagat alias
    Alias /nagat /usr/components/nagat/

# cgitoolkit alias
    ScriptAlias /cgitoolkit/ /usr/components/cgitoolkit/

# ACID (snort interface) alias
    Alias /acid /usr/components/snort/acid/

# SnortCenter (snort control center) alias
    Alias /snortcenter /usr/components/snort/snortcenter/

# Cacti alias
    Alias /cacti /usr/components/cacti/

# BandwidthD alias
    Alias /bandwidthd /usr/components/bandwidthd/htdocs/


# Here ends SSL VirtualHost configuration
</VirtualHost>
</IfDefine>
